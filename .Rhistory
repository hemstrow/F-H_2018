theme(text = element_text(size = 15))+
xlab("Eclosion Mass (mg)")+
theme(axis.title.y = element_blank())+
theme(strip.background = element_rect(fill = 'grey95'))
f2s$oe.binary <- ifelse(f2s$OE == 'xxx', 1, 0)
f2s$Eclosion_Date <- as.Date(paste(f2s$Eclosion_Date, 2020, sep = "-"), format = '%d-%B-%Y')
f2s$Eclosion_Date.julian <- julian(f2s$Eclosion_Date, origin = as.Date("2020-07-01"))
f2s$daylength_at_eclosion <- daylength(41.8781, f2s$Eclosion_Date)
eclosion.mass.model <- lmer(Eclosion_Mass ~ Sex + Population + scale(daylength_at_eclosion) + oe.binary + (1|Mom), data = f2s[f2s$Generation == 2,])
summary(eclosion.mass.model)
eclosion.mass.model <- lmer(Eclosion_Mass ~ Sex + Population*oe.binary + scale(daylength_at_eclosion) + (1|Mom), data = f2s[f2s$Generation == 2,])
summary(eclosion.mass.model)
eclosion.mass.model <- lmer(Eclosion_Mass ~ Sex + Population + oe.binary + scale(daylength_at_eclosion) + (1|Mom), data = f2s[f2s$Generation == 2,])
summary(eclosion.mass.model)
?sunAngle?
()
?sunAngle
sunAngle(stats_orientation$date_time, latitude = 41)
sunAngle(stats_orientation$date_time, latitude = 41)[[3]]
stats_orientation$sun_angle_altitude <- sunAngle(stats_orientation$date_time, latitude = 41.8781, longitude = 87.6298)[[3]]
stats_orientation$sun_angle_altitude <- replace(stats_orientation$sun_angle_altitude, which(stats_orientation$sun_angle_altitude < 0), NA)
hist(stats_orientation$sun_angle_altitude, breaks = 25, main = 'Sun Angle at Time of Trial')
hist(stats_orientation$HourlyWindSpeed, breaks = 20, main = 'Wind Speed (MPH) at Time of Trial')
model1 <- glmer(trial_success ~ population + scale(HourlyWindSpeed) + scale(HourlyDryBulbTemperature) + scale(HourlyRelativeHumidity) + scale(sun_angle_altitude) + scale(HourlyStationPressure) + scale(age_during_trial) + Sex + oe.binary + (1|Mom) + (1|ID), data = dat.mod1, family = 'binomial')
summary(model1)
dat.mod1 <- na.omit(stats_orientation[stats_orientation$cohort==2,])
model1 <- glmer(trial_success ~ population + scale(HourlyWindSpeed) + scale(HourlyDryBulbTemperature) + scale(HourlyRelativeHumidity) + scale(sun_angle_altitude) + scale(HourlyStationPressure) + scale(age_during_trial) + Sex + oe.binary + (1|Mom) + (1|ID), data = dat.mod1, family = 'binomial')
summary(model1)
dat.mod1$fitted <- fitted(model1)
aggregate(fitted ~ population, mean, data = dat.mod1)
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
ranef(south.model)
ranef(south.model)[[1]][[1]]
summary(south.model)[[10]][1])
summary(south.model)[[10]][1]
hist(logit2prob(ranef(south.model)[[1]][[1]] + summary(south.model)[[10]][1]), breaks = 25) #distribution of southward flight probabilities for each individual monarch
hist(logit2prob(ranef(south.model)[[1]][[1]] + summary(south.model)[[10]][1]), breaks = 40) #distribution of southward flight probabilities for each individual monarch
hist(fitted(south.model))
hist(fitted(south.model), breaks = 40, main = 'Probability of Southward Flight')
combined.orientation2$south.fitted <- fitted(south.model)
combined.orientation2 <- combined.orientation2[combined.orientation2$Cohort ==2,]
south.model <- glmer(southie ~  Population.x + (1|ID.x) + (1|Mom.x) + (1|factor.date), data = combined.orientation2, family = 'binomial')
combined.orientation2$south.fitted <- fitted(south.model)
ggplot(combined.orientation2, aes(x = south.fitted))+
geom_histogram()+
facet_wrap(~Population.x)
ggplot(combined.orientation2, aes(x = south.fitted))+
geom_histogram()+
facet_wrap(~Population.x, nrow = 3)
ggplot(combined.orientation2, aes(x = south.fitted))+
geom_histogram(aes(fill = Population.x))+
facet_wrap(~Population.x, nrow = 3)+
theme(bw)
ggplot(combined.orientation2, aes(x = south.fitted))+
geom_histogram(aes(fill = Population.x))+
facet_wrap(~Population.x, nrow = 3)+
theme_classic()
ggplot(combined.orientation2, aes(x = south.fitted))+
geom_histogram(aes(fill = Population.x))+
facet_wrap(~Population.x, nrow = 3)+
theme_classic()+
theme(legend.position = NA)
ggplot(combined.orientation2, aes(x = south.fitted))+
geom_histogram(aes(fill = Population.x))+
facet_wrap(~Population.x, nrow = 3)+
theme_classic()+
theme(legend.position = 'none')
ggplot(combined.orientation2, aes(x = south.fitted))+
geom_histogram(aes(fill = Population.x))+
facet_wrap(~Population.x, nrow = 3)+
theme_classic()+
theme(legend.position = 'none')+
scale_fill_manual(values = 'blue','gold','red')
ggplot(combined.orientation2, aes(x = south.fitted))+
geom_histogram(aes(fill = Population.x))+
facet_wrap(~Population.x, nrow = 3)+
theme_classic()+
theme(legend.position = 'none')+
scale_fill_manual(values = c('blue','gold','red'))
ggplot(combined.orientation2, aes(x = south.fitted))+
geom_histogram(aes(fill = Population.x))+
facet_wrap(~Population.x, nrow = 3)+
theme_classic()+
theme(legend.position = 'none', strip.background = element_rect(fill = 'gray90'))+
scale_fill_manual(values = c('blue','gold','red'))
ggplot(combined.orientation2, aes(x = south.fitted))+
geom_histogram(aes(fill = Population.x))+
facet_wrap(~Population.x, nrow = 3)+
theme_classic()+
theme(legend.position = 'none', strip.background = element_rect(fill = 'gray90'))+
scale_fill_manual(values = c('blue','gold','red'))+
xlab('Probability of Southward Flight Orientation (90-270)')
ggplot(combined.orientation2, aes(x = south.fitted))+
geom_histogram(aes(fill = Population.x))+
facet_wrap(~Population.x, nrow = 3)+
theme_classic()+
theme(legend.position = 'none', strip.background = element_rect(fill = 'gray90'))+
scale_fill_manual(values = c('blue','gold','red'))+
xlab('Probability of Southward Orientation (90-270)')
ggplot(combined.orientation2, aes(x = south.fitted))+
geom_histogram(aes(fill = Population.x))+
facet_wrap(~Population.x, nrow = 3)+
theme_classic()+
theme(legend.position = 'none', strip.background = element_rect(fill = 'gray90'))+
scale_fill_manual(values = c('blue','gold','red'))+
xlab('Probability of Southward Orientation (90-270)')+
geom_vline(xintercept = 0.5)
watson.two(E2.all.trials$R, P2.all.trials$R)
watson.two(all_trials[all_trials$Population=='E' & all_trials$Cohort == 2,]$R, all_trials[all_trials$Population=='P' & all_trials$Cohort == 2,]$R)
watson.two(all_trials[all_trials$Population=='E' & all_trials$Cohort == 2,]$R, all_trials[all_trials$Population=='H' & all_trials$Cohort == 2,]$R)
nrow(all_trials[all_trials$Population=='P' & all_trials$Cohort == 1,])
length(unique(all_trials[all_trials$Population=='P' & all_trials$Cohort == 1,]$ID))
length(unique(all_trials[all_trials$Population=='P' & all_trials$Cohort == 2,]$ID))
nrow(all_trials[all_trials$Population=='P' & all_trials$Cohort == 2,])
nrow(all_trials[all_trials$Population=='E' & all_trials$Cohort == 2,])
length(unique(all_trials[all_trials$Population=='E' & all_trials$Cohort == 2,]$ID))
length(unique(all_trials[all_trials$Population=='H' & all_trials$Cohort == 2,]$ID))
nrow(all_trials[all_trials$Population=='H' & all_trials$Cohort == 2,])
ggplot(all_trials[all_trials$Population == 'E' & all_trials$Cohort == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
geom_bar(stat = 'identity', aes(x = e2.mean[[2]], y = e2.mean[[1]]/100), width = 0.3, col = 'red')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('North American Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
combined.orientation2$Eclosion_Date.x
names(combined.orientation2)
ggplot(combined.orientation2[combined.orientation2$Population == 'E' & combined.orientation2$Cohort == 2 & combined.orientation2$Eclosion_Date.x > '2020-10-03',],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
geom_bar(stat = 'identity', aes(x = e2.mean[[2]], y = e2.mean[[1]]/100), width = 0.3, col = 'red')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('North American Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
ggplot(combined.orientation2[combined.orientation2$Population == 'E' & combined.orientation2$Cohort == 2 & combined.orientation2$Eclosion_Date.x > '2020-10-03',],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('North American Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
combined.orientation2$Vector_Direction
combined.orientation2$R
combined.orientation2[combined.orientation2$Population == 'E' & combined.orientation2$Cohort == 2 & combined.orientation2$Eclosion_Date.x > '2020-10-03',]
combined.orientation2[combined.orientation2$Population == 'E' & combined.orientation2$Cohort == 2 & combined.orientation2$Eclosion_Date.x > as.Date('2020-10-03'),]
combined.orientation2$Eclosion_Date.x
combined.orientation2[combined.orientation2$Eclosion_Date.x > "2020-10-06",]
combined.orientation2[combined.orientation2$Population == 'E' & combined.orientation2$Cohort == 2 & combined.orientation2$Eclosion_Date.x > "2020-10-03",]
combined.orientation2[combined.orientation2$Population.x == 'E' & combined.orientation2$Cohort == 2 & combined.orientation2$Eclosion_Date.x > "2020-10-03",]
combined.orientation2[combined.orientation2$Population.x == 'E' & combined.orientation2$Cohort == 2 & combined.orientation2$Eclosion_Date.x > "2020-10-03",]
combined.orientation2[combined.orientation2$Population.x == 'E' & combined.orientation2$Generation.x == 2 & combined.orientation2$Eclosion_Date.x > "2020-10-03",]
lates <- combined.orientation2[combined.orientation2$Eclosion_Date.x > "2020-10-03",]
lates
ggplot(lates[lates$Population == 'E' & lates$Cohort == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('North American Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
lates[lates$Population == 'E' & lates$Cohort == 2,]
ggplot(lates[lates$Population.x == 'E' & lates$Cohort == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('North American Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
ggplot(lates[lates$Population.x == 'E' & lates$Generation.x == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('North American Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
ggplot(all_trials[all_trials$Population == 'E' & all_trials$Cohort == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
geom_bar(stat = 'identity', aes(x = e2.mean[[2]], y = e2.mean[[1]]/100), width = 0.3, col = 'red')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('North American Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
lates[lates$Population.x == 'E' & lates$Generation.x == 2,]
lates$Generation.x
lates[lates$Population.x == 'E',]
lates$Population.x
lates[lates$Population.x == 'North_America',]
ggplot(lates[lates$Population.x == 'North_America',],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('North American Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
E2.all.trials <- ggplot(all_trials[all_trials$Population == 'E' & all_trials$Cohort == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
geom_bar(stat = 'identity', aes(x = e2.mean[[2]], y = e2.mean[[1]]/100), width = 0.3, col = 'red')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('North America Post 10/3 Eclosion')+theme(plot.title = element_text(size = 16, hjust = 0.5))
ggplot(lates[lates$Population.x == 'North_America',],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('North American Post-10/3 Emergences')+theme(plot.title = element_text(size = 16, hjust = 0.5))
lates[lates$Population.x == 'North_America',]
lates.nam = lates[lates$Population.x == 'North_America',]
Data = lates.nam
meanvec=na.omit(Data$Vec)
Rs=na.omit(Data$R)
meanvec_radians = rad(meanvec)
X_coord = cos(meanvec_radians)
Y_coord = sin(meanvec_radians)
weighted_X_coord = X_coord * Rs
weighted_Y_coord = Y_coord * Rs
Data$X <- weighted_X_coord
Data$Y <- weighted_Y_coord
write.csv(Data, file = '~/Desktop/2020_monarch_orientation/later.E2', row.names = F)
Find_group_mean("~/Desktop/2020_monarch_orientation/later.E2.csv")
write.csv(Data, file = '~/Desktop/2020_monarch_orientation/later.E2.csv', row.names = F)
Find_group_mean("~/Desktop/2020_monarch_orientation/later.E2.csv")
which(lates.nam$Vector_Direction > 0 & lates.nam$Vector_Direction < 10)
lates.nam[which(lates.nam$Vector_Direction > 0 & lates.nam$Vector_Direction < 10),]
bbz <- combined.orientation2[combined.orientation2$age_during_trial < 14,]
ggplot(bbz[bbz$Population == 'E' & all_trials$Cohort == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('Babies Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
bbz
table(bbz$population)
ggplot(bbz[bbz$Population.x == 'E' & bbz$Generation.x == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('Babies Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
bbz$Population.x
ggplot(bbz[bbz$population == 'E' & bbz$Generation.x == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('Babies Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
bbz <- combined.orientation2[combined.orientation2$age_during_trial < 10,]
ggplot(bbz[bbz$population == 'E' & bbz$Generation.x == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('Babies Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
bbz <- combined.orientation2[combined.orientation2$age_during_trial > 20,]
ggplot(bbz[bbz$population == 'E' & bbz$Generation.x == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('Babies Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
bbz <- combined.orientation2[combined.orientation2$age_during_trial > 30,]
ggplot(bbz[bbz$population == 'E' & bbz$Generation.x == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('Babies Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
bbz <- combined.orientation2[combined.orientation2$age_during_trial > 40,]
ggplot(bbz[bbz$population == 'E' & bbz$Generation.x == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('Babies Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
View(age.models)
View(d)
data = read.csv(file = '~/Downloads/monarchs_gbif.csv')
dat2 <- read.csv("~/Downloads/monarchs_gbif.csv", header=T, na.strings=c("","NA"))
head(dat2)
write.csv(dat2, '~/Desktop/monarchs_gbif.csv')
library(dplyr)
library(ggplot2)
setwd("~/Documents/GitHub/Sites/manuscripts/Cardenolide_Sequestration/data/chromatograms/")
all_chromatograms <- list() #empty list to read in data
for(i in seq_along(list.files())){
all_chromatograms[[i]] <- read.table(file = list.files()[i], skip = 44, header = F)
} #loop through directory; each file has metadata in the header that spans the first 44 lines
names(all_chromatograms) <- sub("\\_.*", "", list.files()) #name each dataframe according to its file name (chooses all characters prior to the first underscore)
sample_id <- names(all_chromatograms)
all_chromatograms <- mapply(cbind, all_chromatograms, sample = sample_id, SIMPLIFY = F) #adds a sample ID column to each dataframe
df1 <- do.call(rbind, all_chromatograms) #converts into a single dataframe
names(df1) <- c('RT', 'Step', 'Value', 'sample') #rename columns
df1$Value <- as.numeric(ifelse(df1$Value < 0, 0, df1$Value)) #replace all signal intensity values that are negative with 0s
df1$species <- with(df1, ifelse(sample %in% c('1014.2','1020','1030.1','1039.3','1051.1'), 'ASCU',
ifelse(sample %in% c('406.2','433'), 'GOPH',
ifelse(sample %in% c('536','547.1'), 'AINC',
ifelse(sample %in% c('702','749.1'), 'ASPEC',
ifelse(sample %in% c('801.1P','805.4','807.1AU','844'), 'ASYR', 'ASFA'))))))
ggplot(df1, aes(x = RT, y = Value, col = species))+
geom_line()+
facet_wrap(~sample, scales = 'free') #quick plot to see all data. Note that the internal standard is just after 10 minutes, so anything after is not important. Also, large peak immediately at the start of each chromatogram was not a cardenolide, so this can be omitted.
ggplot(df1[df1$RT > 0.7 & df1$RT < 12 & df1$sample %in% c('1020','1051.1'),],
aes(x = RT, y = Value, col = sample))+
geom_line()+
ylab('Signal Intensity (mAU)') #example of a leaf and wing sample together; baseline is slightly higher for leaf tissue, but can see correspondence between some peaks (e.g. 2.3 mins, 5.8 mins, and the IS)
display.samples <- c('406.2','547.1','749.1','805.4','940.1','1051.1')
df1$species <- factor(df1$species, c('GOPH','ASCU','AINC','ASFA','ASYR','ASPEC'))
ascl.colors <- c('blue','purple','coral','gold','dodgerblue','turquoise')
#pdf('../../figures/Figx.pdf', height = 10, width = 4)
ggplot(df1[df1$RT > 0.7 & df1$RT < 11 & df1$sample %in% display.samples,],
aes(x = RT, y = Value, col = species))+
geom_line(size = 0.5)+
geom_area(aes(fill = species), alpha = 0.3)+
theme_light(base_size = 18)+
facet_wrap(~species, ncol = 1, strip.position = 'right')+
ylab('Signal Intensity (mAU)')+
xlab('Retention Time (Minutes)')+
scale_fill_manual(values = ascl.colors)+
scale_color_manual(values = ascl.colors)+
theme(legend.position = 'none')+
ylim(c(0,150))
#======================set parameters==================
source("scripts/import_dadi_results.R"); source("scripts/interpret_dadi_units.R")
library(dplyr); library(ggplot2)
#======================set parameters==================
source("scripts/import_dadi_results.R"); source("scripts/interpret_dadi_units.R")
setwd('~/Documents/GitHub/F-H_2018/')
#======================set parameters==================
source("scripts/import_dadi_results.R"); source("scripts/interpret_dadi_units.R")
library(dplyr); library(ggplot2)
mu <- 8.4e-9
g <- .3
ratio <- 9370/302446 # ratio of included snps
L <-  1373747*ratio # approx number of considered bases.
wb <- openxlsx::createWorkbook()
#======================read in and summarize results===========================
pass1 <- import_dadi_results("data/dadi_inputs/cat_NH_unfolded_r1.txt",
mu = mu, g = g, L = L)
pass2 <- import_dadi_results("data/dadi_inputs/cat_NH_unfolded_r2.txt",
mu = mu, g = g, L = L)
pass3 <- import_dadi_results("data/dadi_inputs/cat_NH_unfolded_r3.txt",
mu = mu, g = g, L = L)
# AIC dist per model
rdf <- rbind(cbind(pass1$rdf, pass = 1),
cbind(pass2$rdf, pass = 2),
cbind(pass3$rdf, pass = 3),
cbind(pass4$rdf, pass = 4))
rdf$pass <- as.factor(rdf$pass)
rdf$model[rdf$model == "founder_asym_growth_both"] <- "Found and Grow"
rdf$model[rdf$model == "founder_asym_hist_3epoch_exp_growth_p1"] <- "Three Epoch"
rdf$model[rdf$model == "founder_asym_hist_igrowth_p2"] <- "Zhan"
rdf$model[rdf$model == "founder_nomig_admix_two_epoch_growth_both"] <- "Two Epoch"
pass4 <- import_dadi_results("data/dadi_inputs/cat_NH_unfolded_r4.txt",
mu = mu, g = g, L = L)
# AIC dist per model
rdf <- rbind(cbind(pass1$rdf, pass = 1),
cbind(pass2$rdf, pass = 2),
cbind(pass3$rdf, pass = 3),
cbind(pass4$rdf, pass = 4))
rdf$pass <- as.factor(rdf$pass)
rdf$model[rdf$model == "founder_asym_growth_both"] <- "Found and Grow"
rdf$model[rdf$model == "founder_asym_hist_3epoch_exp_growth_p1"] <- "Three Epoch"
rdf$model[rdf$model == "founder_asym_hist_igrowth_p2"] <- "Zhan"
rdf$model[rdf$model == "founder_nomig_admix_two_epoch_growth_both"] <- "Two Epoch"
# minimum AIC per model
mins <- tapply(rdf$AIC, rdf$model, min)
sort(mins)
ggplot(rdf,aes(x = model, y = log(AIC), color = pass)) +
geom_boxplot() + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_color_manual(values = RColorBrewer::brewer.pal(4, "Set1"))
# best overall model
best.reps <- tapply(rdf$AIC, rdf[,c("model", "pass")], min)
best.reps[order(best.reps[,4]),] # best model in pass 4
best.reps[which(rowSums(best.reps == min(best.reps, na.rm = T)) == 1),,drop = F] # best overall
# model averages and summaries
aic_means <- tapply(rdf$AIC, rdf[,c("model", "pass")], mean, na.rm = T)
aic_mins <- tapply(rdf$AIC, rdf[,c("model", "pass")], min, na.rm = T)
aic_sd <- tapply(rdf$AIC, rdf[,c("model", "pass")], sd)
ll_means <- tapply(rdf$ll, rdf[,c("model", "pass")], mean)
ll_max <- tapply(rdf$ll, rdf[,c("model", "pass")], max)
ll_sd <- tapply(rdf$ll, rdf[,c("model", "pass")], sd)
n_runs <- table(rdf[,c("model", "pass")])
comb <- list(aic_mean = aic_means, aic_min = aic_mins, aic_sd = aic_sd,
ll_mean = ll_means, ll_max = ll_max, ll_sd = ll_sd,
n = n_runs)
for(i in 1:length(comb)){
comb[[i]] <- reshape2::melt(comb[[i]])
comb[[i]]$var <- names(comb)[i]
}
comb <- dplyr::bind_rows(comb)
dcomb <- reshape2::dcast(comb, model ~ var + pass)
#=======================grab and prepare data for three best models and Zahn model=============================
# Three Epoch
ilist <- rbind(cbind(pass1$ilist$founder_asym_hist_3epoch_exp_growth_p1_NAM_HAW, pass = 1),
cbind(pass2$ilist$founder_asym_hist_3epoch_exp_growth_p1_NAM_HAW, pass = 2),
cbind(pass3$ilist$founder_asym_hist_3epoch_exp_growth_p1_NAM_HAW, pass = 3),
cbind(pass4$ilist$founder_asym_hist_3epoch_exp_growth_p1_NAM_HAW, pass = 4))
ilist$pass <- as.factor(ilist$pass)
# Found and grow
ilist2 <- rbind(cbind(pass1$ilist$founder_asym_growth_both_NAM_HAW, pass = 1),
cbind(pass2$ilist$founder_asym_growth_both_NAM_HAW, pass = 2),
cbind(pass3$ilist$founder_asym_growth_both_NAM_HAW, pass = 3),
cbind(pass4$ilist$founder_asym_growth_both_NAM_HAW, pass = 4))
ilist2$pass <- as.factor(ilist2$pass)
# Two Epoch
ilist3 <- rbind(cbind(pass1$ilist$founder_nomig_admix_two_epoch_growth_both_NAM_HAW, pass = 1),
cbind(pass2$ilist$founder_nomig_admix_two_epoch_growth_both_NAM_HAW, pass = 2),
cbind(pass3$ilist$founder_nomig_admix_two_epoch_growth_both_NAM_HAW, pass = 3),
cbind(pass4$ilist$founder_nomig_admix_two_epoch_growth_both_NAM_HAW, pass = 4))
ilist3$pass <- as.factor(ilist3$pass)
# Zahn
ilist4 <- rbind(cbind(pass1$ilist$founder_asym_hist_igrowth_p2_NAM_HAW, pass = 1),
cbind(pass2$ilist$founder_asym_hist_igrowth_p2_NAM_HAW, pass = 2),
cbind(pass3$ilist$founder_asym_hist_igrowth_p2_NAM_HAW, pass = 3),
cbind(pass4$ilist$founder_asym_hist_igrowth_p2_NAM_HAW, pass = 4))
ilist4$pass <- as.factor(ilist4$pass)
# combine data
## merge: 1 and 2
ilist1.1 <- ilist[,c("model", "AIC", "nuA", "Tg", "Ts", "Tg2", "Tg3", "s", "nu1F", "nu2F", "nuG2", "m12", "m21", "pass", "run_ID", "pops")]
ilist1.1$AncientTime <- ilist1.1$Tg + ilist1.1$Ts + ilist1.1$Tg2 + ilist1.1$Tg3
ilist1.1$SplitTime <- ilist1.1$Ts + ilist1.1$Tg3
colnames(ilist1.1)[c(9,10,11)] <- c("Ne_NA", "Ne_Ha", "Ne_Split")
ilist2.1 <- ilist2[,c("model", "AIC", "nuA", "nu1", "nu2", "m12", "m21", "Ti", "s", "pass", "run_ID", "pops")]
colnames(ilist2.1)[c(4,5,8)] <- c("Ne_NA", "Ne_Ha", "SplitTime")
ilist2.1$Ne_Split <- ilist2.1$nuA
ilistm <- merge(ilist1.1, ilist2.1, all = T)
ilistm$model <- ifelse(ilistm$model == "founder_asym_growth_both", "Found and Grow", "Three Epoch")
## merge in 3
ilist3.1 <- ilist3
ilist3.1$SplitTime <- ilist3.1$T1 + ilist3.1$T2
colnames(ilist3.1)[7:8] <- c("Ne_NA", "Ne_Ha")
ilistm <- merge(ilistm, ilist3.1, all = T)
ilistm$model[ilistm$model == "founder_nomig_admix_two_epoch_growth_both"] <- "Two Epoch"
## merge in 4
ilist4.1 <- ilist4
ilist4.1$SplitTime <- ilist4.1$Ts + ilist4.1$Tg2
ilist4.1$AncientTime <- ilist4.1$Tg + ilist4.1$Tg2 + ilist4.1$Ts
ilist4.1$Ne_NA <- ilist4.1$nuG - ilist4.1$s
ilist4.1$Ne_Split <- ilist4.1$nuG
ilist4.1$Ne_Ha <- ilist4.1$nu2F
ilistm <- merge(ilist4.1, ilistm, all = T)
ilistm[ilistm$model == "founder_asym_hist_igrowth_p2",]$model <- "Zhan"
#======================plot some spectra=====================
source("scripts/dadi/spectra_comparison_functions.R")
# plot spectra in each quadrant for each model
exit <- T
reticulate::repl_python() # need to do this to add python to the path, apparently
exit
yes
reticulate::repl_python() # need to do this to add python to the path, apparently
exit
yes
quant_cuts <- c(.5, .5)
no
## 1
spectra1 <- pick_and_plot_comp(selected_ilist = ilistm[ilistm$model == "Three Epoch",],
rdf = rdf,
quant_vars = c("s", "SplitTime"),
quant_cuts = quant_cuts,
log_vars = c(T, T),
projection = c(100, 10),
polarized = T,
model = "founder_asym_hist_3epoch_exp_growth_p1")
quant_cuts <- c(.5, .5)
## 1
spectra1 <- pick_and_plot_comp(selected_ilist = ilistm[ilistm$model == "Three Epoch",],
rdf = rdf,
quant_vars = c("s", "SplitTime"),
quant_cuts = quant_cuts,
log_vars = c(T, T),
projection = c(100, 10),
polarized = T,
model = "founder_asym_hist_3epoch_exp_growth_p1")
#======================plot some spectra=====================
source("scripts/dadi/spectra_comparison_functions.R")
# plot spectra in each quadrant for each model
exit <- T
reticulate::repl_python() # need to do this to add python to the path, apparently
